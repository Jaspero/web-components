import{S as g,i as x,s as w,y as v,f as k,w as z,k as l,Q as f,d as a,p,c as D,o as $,T as R,U as b,t as j,j as B,V as E}from"./svelte.js";import"./index.js";function I(i){let e,t,r,s,o,d;return{c(){e=f("svg"),t=f("g"),r=f("circle"),a(r,"cx","12"),a(r,"cy","12"),a(r,"r","9.5"),a(r,"fill","none"),a(r,"stroke-width",s=12/i[4]*i[5]),a(r,"class","svelte-1cfx2z9"),a(t,"class","spinner svelte-1cfx2z9"),a(e,"width",o=i[4]*2),a(e,"height",d=i[4]*2),a(e,"stroke",i[6]),a(e,"viewBox","0 0 24 24")},m(c,u){k(c,e,u),p(e,t),p(t,r)},p(c,u){u&48&&s!==(s=12/c[4]*c[5])&&a(r,"stroke-width",s),u&16&&o!==(o=c[4]*2)&&a(e,"width",o),u&16&&d!==(d=c[4]*2)&&a(e,"height",d),u&64&&a(e,"stroke",c[6])},d(c){c&&l(e)}}}function M(i){let e,t,r,s,o;return{c(){e=f("svg"),t=f("circle"),a(t,"class","progress svelte-1cfx2z9"),a(t,"stroke",i[6]),a(t,"fill","transparent"),a(t,"stroke-dasharray",r=i[3]+" "+i[3]),a(t,"stroke-dashoffset",i[2]),a(t,"stroke-width",i[5]),a(t,"r",i[1]),a(t,"cx",i[4]),a(t,"cy",i[4]),a(e,"height",s=i[4]*2),a(e,"width",o=i[4]*2)},m(d,c){k(d,e,c),p(e,t)},p(d,c){c&64&&a(t,"stroke",d[6]),c&8&&r!==(r=d[3]+" "+d[3])&&a(t,"stroke-dasharray",r),c&4&&a(t,"stroke-dashoffset",d[2]),c&32&&a(t,"stroke-width",d[5]),c&2&&a(t,"r",d[1]),c&16&&a(t,"cx",d[4]),c&16&&a(t,"cy",d[4]),c&16&&s!==(s=d[4]*2)&&a(e,"height",s),c&16&&o!==(o=d[4]*2)&&a(e,"width",o)},d(d){d&&l(e)}}}function N(i){let e;function t(o,d){return o[0]?M:I}let r=t(i),s=r(i);return{c(){s.c(),e=v()},m(o,d){s.m(o,d),k(o,e,d)},p(o,[d]){r===(r=t(o))&&s?s.p(o,d):(s.d(1),s=r(o),s&&(s.c(),s.m(e.parentNode,e)))},i:z,o:z,d(o){o&&l(e),s.d(o)}}}function P(i,e,t){let{determinate:r=!1}=e,{normalizedRadius:s=0}=e,{strokeDashoffset:o=0}=e,{circumference:d=0}=e,{radius:c=60}=e,{stroke:u=8}=e,{color:h="blue"}=e;return i.$$set=n=>{"determinate"in n&&t(0,r=n.determinate),"normalizedRadius"in n&&t(1,s=n.normalizedRadius),"strokeDashoffset"in n&&t(2,o=n.strokeDashoffset),"circumference"in n&&t(3,d=n.circumference),"radius"in n&&t(4,c=n.radius),"stroke"in n&&t(5,u=n.stroke),"color"in n&&t(6,h=n.color)},[r,s,o,d,c,u,h]}class Q extends g{constructor(e){super(),x(this,e,P,N,w,{determinate:0,normalizedRadius:1,strokeDashoffset:2,circumference:3,radius:4,stroke:5,color:6})}}function S(i){let e,t;return e=new Q({props:{determinate:i[0],radius:i[1],stroke:i[2],color:i[3],strokeDashoffset:i[6],normalizedRadius:i[4],circumference:i[5]}}),{c(){R(e.$$.fragment)},m(r,s){b(e,r,s),t=!0},p(r,[s]){const o={};s&1&&(o.determinate=r[0]),s&2&&(o.radius=r[1]),s&4&&(o.stroke=r[2]),s&8&&(o.color=r[3]),s&64&&(o.strokeDashoffset=r[6]),s&16&&(o.normalizedRadius=r[4]),s&32&&(o.circumference=r[5]),e.$set(o)},i(r){t||(j(e.$$.fragment,r),t=!0)},o(r){B(e.$$.fragment,r),t=!1},d(r){E(e,r)}}}function T(i,e,t){let{determinate:r=!1}=e,{progress:s=0}=e,{radius:o=60}=e,{stroke:d=8}=e,{color:c="blue"}=e,u=0,h=0,n=0;return i.$$set=m=>{"determinate"in m&&t(0,r=m.determinate),"progress"in m&&t(7,s=m.progress),"radius"in m&&t(1,o=m.radius),"stroke"in m&&t(2,d=m.stroke),"color"in m&&t(3,c=m.color)},i.$$.update=()=>{i.$$.dirty&183&&r&&(t(4,h=o-d*2),t(5,n=h*2*Math.PI),t(6,u=n-s/100*n))},[r,o,d,c,h,n,u,s]}class y extends g{constructor(e){super(),x(this,e,T,S,w,{determinate:0,progress:7,radius:1,stroke:2,color:3})}get determinate(){return this.$$.ctx[0]}set determinate(e){this.$$set({determinate:e}),$()}get progress(){return this.$$.ctx[7]}set progress(e){this.$$set({progress:e}),$()}get radius(){return this.$$.ctx[1]}set radius(e){this.$$set({radius:e}),$()}get stroke(){return this.$$.ctx[2]}set stroke(e){this.$$set({stroke:e}),$()}get color(){return this.$$.ctx[3]}set color(e){this.$$set({color:e}),$()}}try{customElements.define("jp-progress-spinner",D(y,{determinate:{type:"Boolean"},progress:{},radius:{},stroke:{},color:{}},[],[],!1));}catch{};export{y as default};
//# sourceMappingURL=progress-spinner.wc.js.map
