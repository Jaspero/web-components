"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3315],{8739:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var l=n(4848),r=n(8453);const s={},i="Async Table",d={id:"async-table",title:"async-table",description:"\x3c!-- import '../static/c/async-table.wc.js';",source:"@site/docs/async-table.md",sourceDirName:".",slug:"/async-table",permalink:"/web-components/docs/async-table",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"alert",permalink:"/web-components/docs/alert"},next:{title:"button",permalink:"/web-components/docs/button"}},c={},a=[{value:"Description",id:"description",level:3},{value:"Attributes",id:"attributes",level:3},{value:"Interfaces",id:"interfaces",level:3},{value:"<code>TableHeader</code>",id:"tableheader",level:4},{value:"Properties",id:"properties",level:5},{value:"TablePipe",id:"tablepipe",level:4},{value:"<code>TableSort</code>",id:"tablesort",level:4},{value:"Properties",id:"properties-1",level:5},{value:"<code>TableService</code>",id:"tableservice",level:4},{value:"Properties",id:"properties-2",level:5},{value:"AdditionalExportTypes",id:"additionalexporttypes",level:3},{value:"Example Structure",id:"example-structure",level:4},{value:"Example",id:"example",level:4},{value:"Slots",id:"slots",level:3},{value:"Methods",id:"methods",level:3},{value:"Events",id:"events",level:3},{value:"Demo",id:"demo",level:3}];function o(e){const t={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",h5:"h5",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.h1,{id:"async-table",children:"Async Table"}),"\n",(0,l.jsx)(t.h3,{id:"description",children:"Description"}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"<jp-async-table>"})," is a table component that loads its data asynchronously."]}),"\n",(0,l.jsx)(t.h3,{id:"attributes",children:"Attributes"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Name"})}),(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Required"})}),(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Type"})}),(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Description"})})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"headers"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"\u2713"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.a,{href:"#tableheader",children:(0,l.jsx)(t.code,{children:"TableHeader[]"})})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"column names"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"sort"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"\u2713"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.a,{href:"#tablesort",children:(0,l.jsx)(t.code,{children:"TableSort"})})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"current sorting state of the table"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"service"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"\u2713"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.a,{href:"#tableservice",children:(0,l.jsx)(t.code,{children:"TableService"})})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"table data service"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"showArrangingColumns"}),(0,l.jsx)(t.td,{style:{textAlign:"center"}}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"boolean"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"should the button for arranging columns be shown"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"showExport"}),(0,l.jsx)(t.td,{style:{textAlign:"center"}}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"boolean"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"should the button for export be shown"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"dropdownMenuExport"}),(0,l.jsx)(t.td,{style:{textAlign:"center"}}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"boolean"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"should the button for export download csv or can you have more download options"})]})]})]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(t.h3,{id:"interfaces",children:"Interfaces"}),"\n",(0,l.jsx)(t.h4,{id:"tableheader",children:(0,l.jsx)(t.code,{children:"TableHeader"})}),"\n",(0,l.jsx)(t.p,{children:"Defines the structure of a table header."}),"\n",(0,l.jsx)(t.h5,{id:"properties",children:"Properties"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Name"})}),(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Required"})}),(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Type"})}),(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Description"})})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"label"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"\u2713"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"string"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"title for the table header"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"key"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"\u2713"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"string"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"used for identifying the corresponding data field"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"sortable"}),(0,l.jsx)(t.td,{style:{textAlign:"center"}}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"boolean"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"determines if the table column is sortable"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"freezeFirstColumn"}),(0,l.jsx)(t.td,{style:{textAlign:"center"}}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"boolean"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"determines if the first table column is frozen"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"freezeLastColumn"}),(0,l.jsx)(t.td,{style:{textAlign:"center"}}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"boolean"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"determines if the last table column is frozen"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"sortMethod"}),(0,l.jsx)(t.td,{style:{textAlign:"center"}}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"function"})}),(0,l.jsxs)(t.td,{style:{textAlign:"center"},children:["used for custom sorting with ascending ( ",(0,l.jsx)(t.em,{children:"'asc'"})," ) or descending ( ",(0,l.jsx)(t.em,{children:"'desc'"})," ) direction"]})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"pipes"}),(0,l.jsx)(t.td,{style:{textAlign:"center"}}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.a,{href:"#tablepipe",children:(0,l.jsx)(t.code,{children:"TablePipe"})})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"used for transforming table data"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"fallback"}),(0,l.jsx)(t.td,{style:{textAlign:"center"}}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"any"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"optional value used as a replacement if the specific value isn't available"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"disabled"}),(0,l.jsx)(t.td,{style:{textAlign:"center"}}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"boolean"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"disabled headers aren't shown by default but are available when arranging columns"})]})]})]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(t.h4,{id:"tablepipe",children:"TablePipe"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"value"})," (required, type: ",(0,l.jsx)(t.code,{children:"any"}),") - represents a data element"]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"row"})," (type: ",(0,l.jsx)(t.code,{children:"any"}),") - reference to the entire data row"]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"index"})," (type: ",(0,l.jsx)(t.code,{children:"number"}),") - numerical position in the table"]}),"\n"]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(t.h4,{id:"tablesort",children:(0,l.jsx)(t.code,{children:"TableSort"})}),"\n",(0,l.jsx)(t.p,{children:"Defines the sorting configuration of data."}),"\n",(0,l.jsx)(t.h5,{id:"properties-1",children:"Properties"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Name"})}),(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Required"})}),(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Type"})}),(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Description"})})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"key"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"\u2713"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"string"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"used for describing the data field by which items are sorted"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"direction"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"\u2713"}),(0,l.jsxs)(t.td,{style:{textAlign:"center"},children:[(0,l.jsx)(t.code,{children:"asc"})," or ",(0,l.jsx)(t.code,{children:"desc"})]}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"determines if the sorting order is ascendant or descendant"})]})]})]}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(t.h4,{id:"tableservice",children:(0,l.jsx)(t.code,{children:"TableService"})}),"\n",(0,l.jsx)(t.p,{children:"Defines methods for fetching and loading more table data."}),"\n",(0,l.jsx)(t.h5,{id:"properties-2",children:"Properties"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Name"})}),(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Type"})}),(0,l.jsx)(t.th,{style:{textAlign:"center"},children:(0,l.jsx)(t.strong,{children:"Description"})})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"get"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"function"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"retrieves data with optional sorting and returns a promise containing data rows"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"loadMore"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"function"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"loads additional data with optional sorting and returns a promise containing rows of data"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"export"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"function"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"retrieves all data that should be included when export is triggered by the table"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"arrangeColumns"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"function"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"This method is intended for persisting column organization"})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"additionalExportTypes"}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:(0,l.jsx)(t.code,{children:"function"})}),(0,l.jsx)(t.td,{style:{textAlign:"center"},children:"This method is intended for adding additional export types to function"})]})]})]}),"\n",(0,l.jsx)(t.h3,{id:"additionalexporttypes",children:"AdditionalExportTypes"}),"\n",(0,l.jsx)(t.p,{children:"Each export type contains three key properties:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"label"}),": Name of the export type, displayed on the dropdown menu."]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"type"}),": File format for the export. By default, ",(0,l.jsx)(t.code,{children:"csv"}),", ",(0,l.jsx)(t.code,{children:"json"}),", and ",(0,l.jsx)(t.code,{children:"xml"})," are supported."]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"method"}),": A function that is triggered upon export. This function manipulates data and returns it in the desired\nformat."]}),"\n"]}),"\n",(0,l.jsx)(t.h4,{id:"example-structure",children:"Example Structure"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-typescript",children:"type AdditionalExportType = {\n  label: string;\n  type: string; \n  method: () => {\n    fileContent: string | Uint8Array; \n    mimeType: string;\n    extension: string;\n  };\n};\n"})}),"\n",(0,l.jsx)(t.h4,{id:"example",children:"Example"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-typescript",children:" {\n      label: 'CSV',\n      type: 'csv',\n      method: () => ({\n        fileContent: [\n          activeHeaders.map(h => `\"${h.label}\"`).join(','),\n          ...resolved\n        ].join('\\n'),\n        mimeType: 'text/csv',\n        extension: 'csv'\n      })\n    }\n}\n"})}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(t.h3,{id:"slots",children:"Slots"}),"\n",(0,l.jsx)(t.p,{children:"This component does not have any slots."}),"\n",(0,l.jsx)(t.h3,{id:"methods",children:"Methods"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.code,{children:"removeRow(values: any, key = 'id')"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:"Removes a specific row from the loaded dataset"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.code,{children:"addRow(value: any)"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:"Adds a row to the end of the loaded dataset"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.code,{children:"updateRow(value: any, index: number)"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:"Update row at index"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(t.h3,{id:"events",children:"Events"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.code,{children:"rowClick"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:"triggers when a row is clicked"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(t.h3,{id:"demo",children:"Demo"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-jsx",metastring:"live",live:!0,children:"// import '../static/c/async-table.wc.js';\n// import '../static/c/async-table.css';\n\nfunction asyncTable(props) {\n  let el = useRef(null);\n  useEffect(() => {\n    const firstNames = ['James', 'Emily', 'Michael', 'Sarah', 'William', 'Jessica', 'David', 'Olivia', 'John', 'Sophia'];\n    const lastNames = ['Smith', 'Johnson', 'Brown', 'Williams', 'Jones', 'Miller', 'Davis', 'Garcia', 'Martinez', 'Wilson'];\n    const gender = ['M', 'F', 'O'];\n\n    let filterName = '';\n    let filterGender = '';\n    let filterAge: number | null = null;\n\n    const asyncTable = document.createElement('jp-async-table') as any;\n    asyncTable.headers = [\n      {key: '/name',\n       label: 'Name'},\n      {key: '/firstName',\n       label: 'First Name'},\n      {key: '/lastName',\n       label: 'Last Name'},\n      {key: '/gender',\n       label: 'Gender'},\n      {key: '/height',\n       label: 'Height'},\n      {key: '/age',\n       label: 'Age',\n       sortable: true},\n      {key: '/disabled',\n       label: 'Disabled',\n       disabled: true}];\n\n      asyncTable.service = {\n        get: async () => {\n          let rows = [...Array(20).keys()].map(() => ({\n            name: firstNames [Math.floor(Math.random() * 10)],\n            firstName: firstNames [Math.floor(Math.random() * 10)],\n            lastName: lastNames [Math.floor(Math.random() * 10)],\n            gender: gender[Math.floor(Math.random() * 3)],\n            height: Math.floor(Math.random() * (200 - 120) + 120),\n            age: Math.floor(Math.random() * 100),\n            disabled: true\n          }));\n\n          if (filterName) {\n            rows = rows.filter((row) => row.name.toLowerCase().includes(filterName.toLowerCase()));\n          }\n          if (filterGender) {\n            rows = rows.filter((row) => row.gender === filterGender);\n          }\n          if (filterAge !== null) {\n            rows = rows.filter((row) => row.age === filterAge);\n          }\n          return { rows, hasMore: false };\n        },\n        export: async () => {\n          return [\n            { name: 'John', age: 30, disabled: true },\n            { name: 'Jane', age: 31, disabled: true }\n          ];\n        },\n        import: async () => {\n          return [{ name: 'Imported John', age: 30, disabled: true }];\n        },\n        arrangeColumns: async (id: string, headers: any) => {\n          localStorage.setItem(id, JSON.stringify(headers));\n        },\n        getColumnOrder: async (id: string) => {\n          const storedValue = localStorage.getItem(id);\n          return storedValue ? JSON.parse(storedValue) : null;\n        },\n        adjustPageSize: async () => {},\n        adjustSort: async () => {}\n      };\n      asyncTable.id = 'random-id';\n      asyncTable.allowArrangeColumns = true;\n      asyncTable.pageSizes = [10];\n      asyncTable.sort = { key: '/age', direction: 'asc' };\n      asyncTable.height = '500px';\n      asyncTable.freezeFirstColumn = true;\n      asyncTable.freezeLastColumn = true;\n      el.current.appendChild(asyncTable);\n    });\n    return <div ref={el}></div>;\n  }\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>d});var l=n(6540);const r={},s=l.createContext(r);function i(e){const t=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),l.createElement(s.Provider,{value:t},e.children)}}}]);