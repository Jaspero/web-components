"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6596],{7997:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var r=s(4848),i=s(8453);const l={},t="File Name Formatter",c={id:"Utils/fileNameFormatter",title:"File Name Formatter",description:"Description",source:"@site/docs/Utils/fileNameFormatter.md",sourceDirName:"Utils",slug:"/Utils/fileNameFormatter",permalink:"/web-components/docs/Utils/fileNameFormatter",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Date Formatter",permalink:"/web-components/docs/Utils/dateFormatter"},next:{title:"JSON Pointer",permalink:"/web-components/docs/Utils/json-pointer"}},a={},d=[{value:"Description",id:"description",level:3},{value:"Integration and Usage",id:"integration-and-usage",level:3},{value:"FormatDisplayFileName Function",id:"formatdisplayfilename-function",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Formats",id:"formats",level:3},{value:"Displayed File Name Formats",id:"displayed-file-name-formats",level:4},{value:"Events",id:"events",level:3}];function o(e){const n={code:"code",h1:"h1",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"file-name-formatter",children:"File Name Formatter"}),"\n",(0,r.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"File Name Formatter"})," is a custom formatter util designed for formatting a given file name for easier retrieval and readability."]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"integration-and-usage",children:"Integration and Usage"}),"\n",(0,r.jsxs)(n.p,{children:["To use ",(0,r.jsx)(n.code,{children:"fileNameFormatter"})," util, you need to import the ",(0,r.jsx)(n.code,{children:"formatDisplayFileName"})," ",(0,r.jsx)(n.strong,{children:"function"})," from the ",(0,r.jsx)(n.code,{children:"fileNameFormatter"})," file into your project"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { formatDisplayFileName } from './path/to/utils/fileNameFormatter';\n"})}),"\n",(0,r.jsxs)(n.p,{children:["and call the function with a ",(0,r.jsx)(n.code,{children:"string"})," object and a specified format."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const displayedFileNameString = formatDisplayFileName(\n          fileName, \n          displayFormat,\n          displayFormatFunction //optional\n        );\n"})}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"formatdisplayfilename-function",children:"FormatDisplayFileName Function"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"export function formatDisplayFileName(\n  name: string,\n  format: string,\n  formatter?: (name: string) => string\n) \n"})}),"\n",(0,r.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"}),": ",(0,r.jsx)(n.code,{children:"string"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"name of the file that needs to be formatted"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"format"}),": ",(0,r.jsx)(n.code,{children:"string"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"specifies the output style"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"formatter"}),": ",(0,r.jsx)(n.code,{children:"(date: Date) => string"})," (optional)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["function that customizes the output format of a ",(0,r.jsx)(n.code,{children:"string"})," object"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:"Returns a date string formatted according to the chosen format for displaying file names."}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"formats",children:"Formats"}),"\n",(0,r.jsx)(n.h4,{id:"displayed-file-name-formats",children:"Displayed File Name Formats"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"custom"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"custom file name format defined by the user"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pascal"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"capitalizes"})," all words ",(0,r.jsx)(n.strong,{children:"including"})," the first word and ",(0,r.jsx)(n.code,{children:"removes the space"})," in between them"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"camel"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"capitalizes"})," all words ",(0,r.jsx)(n.strong,{children:"except"})," the first word and ",(0,r.jsx)(n.code,{children:"removes the space"})," in between them"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"snake"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["combines words by replacing the space with an ",(0,r.jsx)(n.code,{children:"underscore (_)"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"kebab"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["combines words by replacing the space with a ",(0,r.jsx)(n.code,{children:"dash (-)"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"title"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["each word starts with an ",(0,r.jsx)(n.code,{children:"uppercase"})," letter and is ",(0,r.jsx)(n.code,{children:"separated"})," by spaces"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"upper"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"uppercases"})," ",(0,r.jsx)(n.strong,{children:"all"})," characters ",(0,r.jsx)(n.code,{children:"removing spaces or separators"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lower"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"lowercases"})," ",(0,r.jsx)(n.strong,{children:"all"})," characters ",(0,r.jsx)(n.code,{children:"removing spaces or separators"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dot"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["combines words by replacing space with a ",(0,r.jsx)(n.code,{children:"dot (.)"})," and ",(0,r.jsx)(n.code,{children:"lowercases"})," ",(0,r.jsx)(n.strong,{children:"all"})," characters"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sentence"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"capizalizes"})," only the first word and replaces ",(0,r.jsx)(n.strong,{children:"all"})," symbols with ",(0,r.jsx)(n.code,{children:"space"}),", making the name look like a regular sentence"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"events",children:"Events"}),"\n",(0,r.jsx)(n.p,{children:"This util does not have any events."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var r=s(6540);const i={},l=r.createContext(i);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);